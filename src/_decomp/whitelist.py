#Embedded file name: C:\BuildAgent\work\ba3dced9a47cf95a\eve\release\V22.02\carbon\common\lib\whitelist.py
import exceptions
import blue
from eveprefs import boot
whitelist = '\n    blue.DBRowDescriptor\n    blue.DBRow\n\n    eveexceptions.SQLError\n    eveexceptions.UserError\n    eveexceptions.CancelSessionChange\n    eveexceptions.UnmarshalError\n    eveexceptions.ConnectionError\n    eveexceptions.ServiceNotFound\n    \n    stackless_response_router.exceptions.TimeoutException\n\n    carbon.common.script.sys.crowset.CRowset\n    carbon.common.script.sys.crowset.CIndexedRowset\n    carbon.common.script.sys.crowset.CFilterRowset\n\n    exceptions.AttributeError\n    exceptions.IndexError\n    exceptions.ValueError\n    exceptions.KeyError\n    exceptions.WindowsError\n    exceptions.ReferenceError\n    exceptions.RuntimeError\n    exceptions.IOError\n\n    exceptions.GPSException\n    exceptions.GPSTransportClosed\n    exceptions.GPSBadAddress\n    exceptions.GPSAddressOccupied\n\n    carbon.common.script.net.GPSExceptions.GPSException\n    carbon.common.script.net.GPSExceptions.GPSTransportClosed\n    carbon.common.script.net.GPSExceptions.GPSBadAddress\n    carbon.common.script.net.GPSExceptions.GPSAddressOccupied\n\n    carbon.common.script.net.machoNetExceptions.MachoException\n    carbon.common.script.net.machoNetExceptions.MachoWrappedException\n    carbon.common.script.net.machoNetExceptions.ProxyRedirect\n    carbon.common.script.net.machoNetExceptions.UberMachoException\n    carbon.common.script.net.machoNetExceptions.UnMachoDestination\n    carbon.common.script.net.machoNetExceptions.UnMachoChannel\n    carbon.common.script.net.machoNetExceptions.WrongMachoNode\n\n    xmlrpclib.Fault\n\n    carbon.common.script.net.machoNetPacket.CallReq\n    carbon.common.script.net.machoNetPacket.CallRsp\n    carbon.common.script.net.machoNetPacket.ErrorResponse\n    carbon.common.script.net.machoNetPacket.IdentificationReq\n    carbon.common.script.net.machoNetPacket.IdentificationRsp\n    carbon.common.script.net.machoNetAddress.MachoAddress\n    carbon.common.script.net.machoNetPacket.Notification\n    carbon.common.script.net.machoNetPacket.PingReq\n    carbon.common.script.net.machoNetPacket.PingRsp\n    carbon.common.script.net.machoNetPacket.SessionChangeNotification\n    carbon.common.script.net.machoNetPacket.SessionInitialStateNotification\n    carbon.common.script.net.machoNetPacket.TransportClosed\n    carbon.common.script.net.machoNetPacket.MovementNotification\n\n    carbon.common.script.net.objectCaching.CacheOK\n    carbon.common.script.net.objectCaching.CachedMethodCallResult\n    carbon.common.script.net.objectCaching.CachedObject\n\n    carbon.common.script.net.cachedObject.CachedObject\n    utillib.KeyVal\n    carbon.common.script.net.moniker.Moniker\n    carbon.common.script.net.moniker.Moniker\n    carbon.common.script.util.format.PasswordString\n    carbon.common.script.sys.row.Row\n    carbon.common.script.net.moniker.UpdateMoniker\n\n    __builtin__.str\n    __builtin__.unicode\n    __builtin__.set\n\n    collections.OrderedDict\n    collections.defaultdict\n    collections.deque\n\n    localizationUtil.LocalizationSafeString\n\n    eve.common.script.paperDoll.paperDollDefinitions.SculptingRow\n    eve.common.script.paperDoll.paperDollDefinitions.ModifierRow\n    eve.common.script.paperDoll.paperDollDefinitions.ColorSelectionRow\n    eve.common.script.paperDoll.paperDollDefinitions.AppearanceRow\n\n    machonethelpers.argchecker.ValidateArgTypeException\n    \n\n    fsd.schemas.loaders.objectLoader.ObjectLoader\n    fsd.schemas.path.FsdDataPathObject\n    fsd.schemas.binaryLoader.LoaderState\n    fsd.schemas.loaders.dictLoader.DictLoader\n    \n    raffles.common.raffle.Raffle\n    raffles.common.ticket.Ticket\n    raffles.common.raffle_data.RaffleCreationData\n    raffles.RafflesError\n    raffles.RaffleNotFoundError\n    raffles.TicketUnavailableError\n    raffles.NotEnoughISKError\n    raffles.FailureToDeliverItemError\n    raffles.FetchError\n    raffles.InventoryError\n    raffles.CreateError\n    raffles.PurchaseError\n      \n    kiring.common.errors.KiringRedeemingCodeException\n    kiring.common.errors.KiringRedeemingCodeNotValidException\n    kiring.common.errors.KiringRedeemingCodeUsedException\n    kiring.common.errors.KiringRedeemingCodeTypeUsedException\n\n    contracts.contractStruct.ContractStruct\n\n    uuid.UUID\n'
whitelist += '\n        foo.SlimItem\n\n        eve.common.script.util.slimItem.SlimItem\n\n        eve.common.script.sys.eveCfg.Standings\n\n        eve.common.script.sys.rowset.RowDict\n        eve.common.script.sys.rowset.RowList\n\n        eve.common.script.sys.rowset.Rowset\n        eve.common.script.sys.rowset.FilterRowset\n        eve.common.script.sys.rowset.IndexRowset\n        eve.common.script.sys.rowset.IndexedRows\n        eve.common.script.sys.eveCfg.StackSize\n        eve.common.script.sys.eveCfg.Singleton\n        eve.common.script.util.pagedCollection.PagedResultSet\n\n        dogma.exceptions.EmbarkOnlineError\n\n        evewar.util.War\n        eve.common.script.universe.locationWrapper.SolarSystemWrapper\n\n        industry.job.Location\n        industry.const.Error\n        industry.const.Reference\n\n        crimewatch.corp_aggression.settings.AggressionSettings\n\n        shipskins.LicensedSkin\n\n        eve.common.script.dogma.effect.BrainEffect\n        dogma.attributes.Attribute\n        dogma.attributes.SkillLevelAttribute\n        dogma.attributes.ChargedAttribute\n        dogma.attributes.HeatAttribute\n        dogma.attributes.StackingNurfedAttribute\n        dogma.attributes.LiteralAttribute\n        dogma.attributes.BrainLiteralAttribute\n        \n        datetime.datetime\n        datetime.date\n\n        projectdiscovery.common.exceptions.NoActiveClassificationTaskError\n        projectdiscovery.common.exceptions.UnexpectedMmosResultError\n        projectdiscovery.common.exceptions.TooFewPolygonsMmosResultError\n        projectdiscovery.common.exceptions.TooFewVerticesMmosResultError\n        projectdiscovery.common.exceptions.NoConnectionToAPIError\n        projectdiscovery.common.exceptions.MissingKeyError\n\n        marketutil.BestByOrder\n        marketutil.OrderAllData\n\n        seasons.common.challenge.Challenge\n        seasons.common.exceptions.ChallengeForCharacterNotFoundError\n        seasons.common.exceptions.NotEnoughChallengeTypesAvailableError\n        seasons.common.exceptions.ChallengeTypeNotFoundError\n        \n        explorationscanner.common.cosmicAnomalyInfo.CosmicAnomalyInfo\n        explorationscanner.common.signatureInfo.SignatureInfo\n        explorationscanner.common.structureInfo.StructureInfo\n        explorationscanner.common.staticSiteInfo.StaticSiteInfo\n        \n        evedungeons.common.dungeonInfo.DungeonInfo\n\n        agency.common.contentdata.CustomContentData\n        \n        fastcheckout.common.errors.FastCheckoutDisabled\n\n        characterskills.common.character_skill_entry.CharacterSkillEntry\n        \n        npcs.npccorporations.CorporationTicker\n\n        characterenergy.characterEnergyState.CharacterEnergyState\n        characterenergy.characterEnergyState.InsufficientEnergyError\n        solarsysteminterference.solarsystemInterferenceState.SolarsystemInterferenceState\n        solarsysteminterference.solarsystemInterferenceState.ExcessInterferenceError\n        \n        structures.structureHangarViewState.StructureHangarViewState\n        \n        factionwarfare.occupationState.OccupationState\n        factionwarfare.victoryPointState.VictoryPointState\n        factionwarfare.advantageState.AdvantageState\n        \n        shipcosmetics.structs._modules._logo.ShipCosmeticLogo\n        shipcosmetics.structs._fitting._group.ShipCosmeticFittingGroup\n        shipcosmetics.structs._fitting._fitting.ShipCosmeticFitting\n        shipcosmetics.structs._license._logo.ShipLogoLicense\n        \n        shipcaster.landingPadData.LandingPadData\n        \n        deathzone.targetTrackingState.TargetTrackingState\n\n        pirateinsurgency.campaignClientSnapshot.CampaignClientSnapshot\n        \n        lpOffers.exceptions.TransfersDisabledError\n        \n        sovereignty.data_types.SovHubInfo\n        sovereignty.data_types.SovClaimInfo\n\n        dotWeapons.common.dotAppInfo.DotApplicationInfo\n\n        evedungeons.common.instance_identifier.DungeonInstanceIdentifier\n'
if boot.role == 'server':
    whitelist += '\n        agent.StandardMissionDetails\n        agent.HeraldryMissionDetails\n        agent.ResearchMissionDetails\n        agent.StorylineMissionDetails\n        agent.EpicArcMissionDetails\n        agent.OfferDetails\n        agent.LoyaltyPoints\n        agent.Agent\n        agent.Credits\n        agent.Item\n        agent.Entity\n        agent.Objective\n        agent.FetchObjective\n        agent.EncounterObjective\n        agent.DungeonObjective\n        agent.TransportObjective\n        agent.AgentObjective\n        agent.Reward\n        agent.TimeBonusReward\n        agent.MissionReferral\n        agent.Location\n        agent.ItemDeclarationError\n        agent.ItemResolutionFailure\n        agent.TransferItemFailure\n\n        eve.server.script.mgt.npc.agents.services.standardMissionDetails.StandardMissionDetails\n        eve.server.script.mgt.npc.agents.services.standardMissionDetails.HeraldryMissionDetails\n        eve.server.script.mgt.npc.agents.services.standardMissionDetails.ResearchMissionDetails\n        eve.server.script.mgt.npc.agents.services.standardMissionDetails.StorylineMissionDetails\n        eve.server.script.mgt.npc.agents.services.standardMissionDetails.EpicArcMissionDetails\n        eve.server.script.mgt.npc.agents.services.standardMissionDetails.OfferDetails\n        eve.server.script.mgt.npc.agents.items.LoyaltyPoints\n        eve.server.script.mgt.npc.agents.items.Agent\n        eve.server.script.mgt.npc.agents.items.Credits\n        eve.server.script.mgt.npc.agents.items.Item\n        eve.server.script.mgt.npc.agents.items.Entity\n        eve.server.script.mgt.npc.agents.items.Objective\n        eve.server.script.mgt.npc.agents.items.FetchObjective\n        eve.server.script.mgt.npc.agents.items.EncounterObjective\n        eve.server.script.mgt.npc.agents.items.DungeonObjective\n        eve.server.script.mgt.npc.agents.items.TransportObjective\n        eve.server.script.mgt.npc.agents.items.AgentObjective\n        eve.server.script.mgt.npc.agents.items.Reward\n        eve.server.script.mgt.npc.agents.items.TimeBonusReward\n        eve.server.script.mgt.npc.agents.items.MissionReferral\n        eve.server.script.mgt.npc.agents.items.Location\n        eve.server.script.mgt.npc.agents.exceptions.ItemDeclarationError\n        eve.server.script.mgt.npc.agents.exceptions.ItemResolutionFailure\n        eve.server.script.mgt.npc.agents.exceptions.TransferItemFailure\n\n        sys.A\n        sys.AgentString\n        sys.AgentUnicode\n\n        eve.common.script.sys.strangeStrings.A\n        eve.common.script.sys.strangeStrings.AgentString\n        eve.common.script.sys.strangeStrings.AgentUnicode\n\n        scriber.hermes.Notification\n        scriber.hermes.ReadStatus\n\n        externalQueue.actions.ExternalActionException\n        npcs.server.rewards.rewards.GroupRewardData\n        npcs.server.rewards.rewards.DisqualificationData\n\n        operations.common.const.RewardToken\n        operations.common.const.SkillRewardToken \n\n        raffles.server.PendingRaffle\n        \n        skills.server.exceptions.SkillBundleInjectionFailed\n        skills.server.exceptions.MultiSkillBundleInjectForbidden\n        \n        evefitting.errors.FittingDoesNotExistError\n        evefitting.errors.FittingIsNotValid\n        \n        externalQueue.utils.FilterGenerator\n        \n        behaviors.blackboards.scopes.Scope\n        \n        voidspace.server.content_manager.PlayerLocationInfo\n        ballpark.gridallocationmanager.SolarSystemFullException\n        ballpark.gridallocationmanager.GridAlreadyAllocatedError\n        \n        storylines.server.airnpe.AirNpeStartData\n        \n        nodegraph.server.atoms.atom_service.AtomNotFoundError\n        nodegraph.server.atoms.atom_service.AtomRemoteMethodNotSupportedError             \n        \n        shipcaster.launcherData.LauncherData\n        \n        lpOffers.exceptions.InsufficientBalanceError\n        lpOffers.exceptions.MissingCorpRoleError\n        lpOffers.exceptions.WrongCorporationMembershipError\n\n        pirateinsurgency.server.campaignServerSnapshot.CampaignServerSnapshot\n        \n        assetholding.server.inventory.exceptions.HoldItemsFailed\n        assetholding.server.inventory.exceptions.SpawnItemsFailed\n\n        sovereignty.hub.server.errors.ItemCannotBeAddedToSovHubError\n        sovereignty.skyhook.server.errors.CannotActivateError\n        sovereignty.skyhook.server.errors.CannotAccessReagentsError\n        \n        spacecomponents.server.components.mercenaryDen.MercenaryDenNotFound\n        spacecomponents.server.components.mercenaryDen.ValidateStartRequestFailed\n    '
if boot.role == 'client':
    whitelist += '\n        playerprogression.assetnetworthnotifier.AssetNetWorthProgression\n        playerprogression.contractprogressionnotifier.ContractProgression\n        playerprogression.marketprogressionnotifier.MarketProgression\n\n        raffles.common.const.BlueprintType\n    '

def InitWhitelist():
    wl = whitelist
    res = {}
    for item in wl.split():
        item.strip()
        if item:
            mod, obj = item.rsplit('.', 1)
            mod = __import__(mod, globals(), locals(), [obj], -1)
            obj = getattr(mod, obj)
            res[obj] = None

    for e in dir(exceptions):
        if e.endswith('Error'):
            e = getattr(exceptions, e)
            res[e] = None

    blue.marshal.globalsWhitelist = res
    blue.marshal.collectWhitelist = False


def add_to_whitelist(obj):
    blue.marshal.globalsWhitelist[obj] = None
